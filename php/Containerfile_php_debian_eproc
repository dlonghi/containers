FROM docker.io/php:8.2.22-fpm

### Certificado CheckpointCA 2013-2028 TRF2
### so that the container can access internet thru proxy ssl inspection
RUN cat <<'EOF' > /usr/local/share/ca-certificates/CheckpointCA_2023-2028.crt && update-ca-certificates
-----BEGIN CERTIFICATE-----
MIIESzCCAzOgAwIBAgIJAL/7wXSR/OrTMA0GCSqGSIb3DQEBCwUAMHYxCzAJBgNV
BAYTAkJSMRcwFQYDVQQIEw5SaW8gZGUgSmFuZWlybzEXMBUGA1UEBxMOUmlvIGRl
IEphbmVpcm8xDTALBgNVBAoTBFRSRjIxDTALBgNVBAsTBFRSRjIxFzAVBgNVBAMT
DkNoZWNrUG9pbnQyMDIzMB4XDTIzMDkxODIxNTYyOVoXDTI4MDkxNjIxNTYyOVow
djELMAkGA1UEBhMCQlIxFzAVBgNVBAgTDlJpbyBkZSBKYW5laXJvMRcwFQYDVQQH
Ew5SaW8gZGUgSmFuZWlybzENMAsGA1UEChMEVFJGMjENMAsGA1UECxMEVFJGMjEX
MBUGA1UEAxMOQ2hlY2tQb2ludDIwMjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDlgjjY8aRM4ACpE9Tg9epr/PiU590X0lsdHkXWgn7nZPabgxeWW9VR
FfhXVlJodELCPe7LOA+CkhErADujEmWlhe/gAipo89F9YpCwZUszYoPx+wZwy7K3
G6/0TLTqhPhYR3ApvNhrC3J9ETKINdI0XvPpIyJ45F1Kg82Zdhx25z9DtwcGIBTA
u0CmeLG+B6npzv3cbkCn9VzM17cPa1BOXLL4PSGelpOnTNjagcsI09SvWTvMgQwG
S3yMZ72lVBnxnpO+hE5R4OQ8svwJohYu+CBuMFIdwPPOMXfzwN3iDxl08bB8auaH
AQnbGxBiIGslyzimlWECSLpPcH0+Zjc9AgMBAAGjgdswgdgwHQYDVR0OBBYEFKUV
fYzNW4PIee36NOKa7EVJN+a7MIGoBgNVHSMEgaAwgZ2AFKUVfYzNW4PIee36NOKa
7EVJN+a7oXqkeDB2MQswCQYDVQQGEwJCUjEXMBUGA1UECBMOUmlvIGRlIEphbmVp
cm8xFzAVBgNVBAcTDlJpbyBkZSBKYW5laXJvMQ0wCwYDVQQKEwRUUkYyMQ0wCwYD
VQQLEwRUUkYyMRcwFQYDVQQDEw5DaGVja1BvaW50MjAyM4IJAL/7wXSR/OrTMAwG
A1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAJJUdsRTL5+J905xSnSBsjFu
wbs7gHLh7yqgJd9ZvtEMaMAdjD9zqdTcvaMAu3zfjN0pCZneuJZGjL+qAOalyN70
atG/je1Hheh5au4le6BjF5vnJemPGimgkPenGHmu1eZHTW/ljh1wpmVWptR+1Cyl
tYgdFOHscjIVkhcY65t7ZmrPjn0M7LpCwg3+Pf8zRWdABJFW3N+/fqsgcOvqJpqE
IYQqaUr1LCoSES8dT4xfkb4mjXzk8+YzBmPODxIprCGzyx8ym+mDI5+Uwlm+S9Ci
k5/GyUpjoKwyFBDCSSr55RA67sFboOhObnr4BMe49oRolJKzuQOXDGM9R5TC4Q4=
-----END CERTIFICATE-----  
EOF

#RUN curl -sko /usr/local/share/ca-certificates/CheckpointCA_2023-2028.crt https://gist.githubusercontent.com/dlonghi/d8773e677b34a937bf159b50f259478e/raw/CheckpointCA_2023-2028.crt \
# && update-ca-certificates


RUN apt-get update && apt-get upgrade -y \
 && ln -snf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime \
 && echo America/Sao_Paulo > /etc/timezone \
 && groupmod -g 12000 www-data \
 && usermod -u 12000 -g 12000 www-data \
 && apt-get update && apt-get install -y --no-install-recommends --no-install-suggests \
   build-essential \
   git \
   curl \
   zip \
   unzip \
   ssmtp \
   gawk \
   libz-dev \
   libzip-dev \
   libbz2-dev \
   liblzf-dev \
   liblz4-dev \
   libzstd-dev \
   libssl-dev \
   libfreetype-dev \
   libjpeg62-turbo-dev \
   libwebp-dev \
   libpng-dev \
   libavif-dev \
   libxpm-dev \
   libgd-dev \
   libmagickwand-dev \
   libpq-dev \
   libmemcached-dev \
   libxml2-dev \
   libxslt-dev \
   libyaml-dev \
 && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
 && docker-php-ext-install -j$(nproc) gd \
 && docker-php-ext-install soap \
 && docker-php-ext-install bcmath \
 && docker-php-ext-install mysqli \
 && docker-php-ext-install pdo_mysql \
 && docker-php-ext-install pdo_pgsql \
 && docker-php-ext-install zip \
 && docker-php-ext-install opcache \
 && docker-php-ext-install xsl \
 && docker-php-ext-install bz2 \
 && docker-php-ext-install exif \
 && docker-php-ext-install gettext \
 && docker-php-ext-install calendar \
 && docker-php-ext-install intl \
 && docker-php-ext-install shmop \
 && docker-php-ext-install sockets \
 && docker-php-ext-install sysvmsg \
 && docker-php-ext-install sysvsem \
 && docker-php-ext-install sysvshm \
 && pecl install msgpack && docker-php-ext-enable msgpack \
 && pecl install imagick && docker-php-ext-enable imagick \
 && pecl install igbinary && docker-php-ext-enable igbinary \
 && pecl install --onlyreqdeps \
   --configureoptions='enable-memcached-sasl="no" \
                       enable-memcached-session="yes" \
                       enable-memcached-igbinary="yes" \
                       enable-memcached-json="yes" \
                       enable-memcached-msgpack="yes" \
                       enable-memcached-lzf="yes" \
                       enable-memcached-zstd="yes" \
                       enable-memcached-lz4="yes" \
                       with-system-fastlz="no"' \
      memcached && docker-php-ext-enable memcached \
 && pecl install --onlyreqdeps \
   --configureoptions='enable-redis-igbinary="yes" \
                       enable-redis-lzf="yes" \
                       enable-redis-zstd="yes" \
                       enable-redis-lz4="yes"' \
      redis && docker-php-ext-enable redis \
 && pecl install xdebug \
 && apt-get purge build-essential -y && apt-get autoremove -y && apt-get clean


RUN curl -LkO --output-dir /tmp https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb \
 && apt install -y /tmp/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb \
 && rm -rf /tmp/wkhtmltox_0.12.6.1-3.bookworm_amd64.deb


RUN apt-get update && apt-get upgrade -y \
 && apt-get install -y --no-install-recommends --no-install-suggests default-jre \
 && apt-get autoremove -y && apt-get clean


# https://gist.github.com/whoilo/42ce52af2378f6b4bf859457fdfeab2b
# https://www.oracle.com/database/technologies/instant-client/linux-x86-64-downloads.html
RUN apt-get install libaio1 libaio-dev -y \
 && export OC_BASE=https://download.oracle.com/otn_software/linux/instantclient/2350000 \
 && export OC_BASIC=instantclient-basic-linux.x64-23.5.0.24.07.zip \
 && export OC_SDK=instantclient-sdk-linux.x64-23.5.0.24.07.zip \
 && mkdir /opt/oracle \
 && curl -LkO --output-dir /opt/oracle "$OC_BASE/$OC_BASIC" \
 && curl -LkO --output-dir /opt/oracle "$OC_BASE/$OC_SDK" \
 && unzip -o /opt/oracle/$OC_BASIC -d /opt/oracle \
 && unzip -o /opt/oracle/$OC_SDK -d /opt/oracle \
 && rm -rf /opt/oracle/$OC_BASIC /opt/oracle/$OC_SDK /opt/oracle/META-INF \
 && echo '/opt/oracle/instantclient_23_5/' > /etc/ld.so.conf.d/oracle.conf && ldconfig \
 && apt-get autoremove -y && apt-get clean \
 && echo "instantclient,/opt/oracle/instantclient_23_5" | pecl install oci8 \
 && docker-php-ext-enable oci8 \
 && docker-php-ext-configure pdo_oci --with-pdo-oci=instantclient,/opt/oracle/instantclient_23_5,23.5 \
 && docker-php-ext-install pdo_oci


RUN mkdir -p /app/public \
 && cat <<'EOF' > /app/public/phpinfo.php
<?php
echo "<pre>";
print_r(get_defined_vars());
echo "</pre>";
echo "<pre>phpinfo</pre>";
phpinfo();
echo "<pre>xdebug_info</pre>";
xdebug_info();
EOF


#RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini" \
 && docker-php-ext-enable xdebug


## eproc e outros apps infraphp do TRF4
RUN sed -i 's/^default_charset = "UTF-8"/default_charset = "ISO-8859-1"/g' "$PHP_INI_DIR/php.ini" \
 && sed -i 's/^;date.timezone =/date.timezone = "America\/Sao_Paulo"/g' "$PHP_INI_DIR/php.ini" \
 && sed -i 's/^short_open_tag = Off/short_open_tag = On/g' "$PHP_INI_DIR/php.ini" \
 && sed -i 's/^access.log = /;access.log = /g' /usr/local/etc/php-fpm.d/docker.conf
# obs: nginx.conf com chartset ISO-8859-1 NAO funcionou
# o campo de digiar senha na pagina inicial eproc ficou louco.
# foi necessario deixar chartset UTF-8;
